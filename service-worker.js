"use strict";var precacheConfig=[["/bansave/React-CompanyProfile.git/index.html","f9e77ac39089079f744abbbb285c257e"],["/bansave/React-CompanyProfile.git/static/css/main.3644a8c6.css","af96f57150d180e9e72eeb43f2de2da9"],["/bansave/React-CompanyProfile.git/static/js/main.7c2ab566.js","8ee920499bd66842344d07184ebc59cd"],["/bansave/React-CompanyProfile.git/static/media/AncientAnihilation.5794b8a0.png","5794b8a08fd89a322bbe575b15865043"],["/bansave/React-CompanyProfile.git/static/media/Packoto.aa680559.png","aa6805596c762d96a1a1a74136c1efec"],["/bansave/React-CompanyProfile.git/static/media/Puyo.a94e4555.png","a94e4555a80f7009b956ef9f3f32669b"],["/bansave/React-CompanyProfile.git/static/media/Stdio95.e4759849.jpg","e47598494334c13af4eeecec69c3909b"],["/bansave/React-CompanyProfile.git/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/bansave/React-CompanyProfile.git/static/media/purwadhika 8427.04b6239a.jpg","04b6239adf6dba439e8069dc2ae117c5"],["/bansave/React-CompanyProfile.git/static/media/purwadhika 8640.279b5161.jpg","279b5161e9c39acdfafb70718828a1ce"],["/bansave/React-CompanyProfile.git/static/media/purwadhika 8649.445331b0.jpg","445331b017c6053f1883223bc5bc6ac0"],["/bansave/React-CompanyProfile.git/static/media/purwadhika 8661.58a04f36.jpg","58a04f36df81611a6b4f1912957cc2e6"],["/bansave/React-CompanyProfile.git/static/media/purwadhika 8665.babd4999.jpg","babd4999fed3604a36c4457ff37e914a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),a=urlsToCacheKeys.has(t));var r="/bansave/React-CompanyProfile.git/index.html";!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL(r,self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});